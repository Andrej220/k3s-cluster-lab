- name: Install Rook-Ceph
  block:
    - name: Wait until K3s is ready
      command: kubectl get nodes
      register: k3s_ready
      until: k3s_ready is succeeded
      retries: 10
      delay: 5

    - name: Clone Rook repository
      ansible.builtin.git:
        repo: 'https://github.com/rook/rook.git'
        dest: /home/user/rook
        version: 6db75b76b8b256bff90ed0e20519816b1f908724
      become_user: user
    - name: Ensure /var/lib/rook exists with correct ownership
      ansible.builtin.file:
        path: /var/lib/rook
        state: directory
        owner: 167
        group: 167
        mode: '0755'

    - name: Modify Rook-Ceph cluster replica count to 1
      ansible.builtin.lineinfile:
        path: /home/user/rook/deploy/examples/cluster.yaml
        regexp: '^\s*count:\s*3'
        line: '    count: 1'
      become_user: user

    - name: Apply Rook-Ceph Custom Resource Definitions
      ansible.builtin.command:
        cmd: kubectl apply -f /home/user/rook/deploy/examples/crds.yaml
      become_user: user

    - name: Apply Rook-Ceph common resources
      ansible.builtin.command:
        cmd: kubectl apply -f /home/user/rook/deploy/examples/common.yaml
      become_user: user

    - name: Apply Rook-Ceph operator
      ansible.builtin.command:
        cmd: kubectl apply -f /home/user/rook/deploy/examples/operator.yaml
      become_user: user

    - name: Wait for Rook-Ceph operator to be ready
      ansible.builtin.command:
        cmd: kubectl -n rook-ceph rollout status deploy/rook-ceph-operator
      register: operator_status
      until: operator_status.rc == 0
      retries: 50
      delay: 10
      become_user: user

    - name: Apply Rook-Ceph cluster configuration
      ansible.builtin.command:
        cmd: kubectl apply -f /home/user/rook/deploy/examples/cluster.yaml
      become_user: user

    - name: Wait for CephCluster to be ready
      ansible.builtin.command:
        cmd: kubectl -n rook-ceph get cephcluster rook-ceph -o jsonpath='{.status.phase}'
      register: ceph_cluster_status
      until: ceph_cluster_status.stdout == "Ready"
      retries: 50
      delay: 10
      become_user: user

    - name: Apply Rook-Ceph toolbox
      ansible.builtin.command:
        cmd: kubectl apply -f /home/user/rook/deploy/examples/toolbox.yaml
      become_user: user

    - name: Wait for the toolbox to be ready
      ansible.builtin.command:
        cmd: kubectl -n rook-ceph rollout status deploy/rook-ceph-tools
      register: toolbox_status
      until: toolbox_status.rc == 0
      retries: 30
      delay: 10
      become_user: user

    - name: Wait until the .mgr pool exists
      ansible.builtin.command:
        cmd: kubectl -n rook-ceph exec deploy/rook-ceph-tools -- ceph osd pool ls
      register: mgr_pool
      until: '".mgr" in mgr_pool.stdout | trim'
      retries: 50
      delay: 10
      become_user: user

    - name: Create replication rule for single node setup
      ansible.builtin.command:
        cmd: kubectl -n rook-ceph exec deploy/rook-ceph-tools -- ceph osd crush rule create-replicated replicated_rule_osd default osd
      become_user: user

    - name: Set .mgr pool crush rule
      ansible.builtin.command:
        cmd: kubectl -n rook-ceph exec deploy/rook-ceph-tools -- ceph osd pool set .mgr crush_rule replicated_rule_osd
      become_user: user

    - name: Copy Rook-Ceph resources file - cluster patch
      ansible.builtin.copy:
        src: rook-ceph-resources.yaml
        dest: /home/user/cluster_update.yaml

    - name: Copy Rook-Ceph resources file
      ansible.builtin.copy:
        src: rook-ceph-resources.yaml
        dest: /home/user/rook-ceph-resources.yaml

    - name: Apply updates on cluster
      ansible.builtin.command:
        cmd: kubectl apply -f /home/user/cluster_update.yaml
      become_user: user

#    - name: Apply the Rook-Ceph resources (CephBlockPool, StorageClass, PVC)
#      ansible.builtin.command:
#        cmd: kubectl apply -f /home/user/rook-ceph-resources.yaml
#      become_user: user
#
#    - name: Wait for PVC to be Bound
#      ansible.builtin.command:
#        cmd: kubectl get pvc rook-ceph-pvc -o jsonpath='{.status.phase}'
#      register: pvc_status
#      until: pvc_status.stdout == "Bound"
#      retries: 50
#      delay: 10
#      become_user: user        